/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { createUser } from "../funcs/createUser.js";
import { getUser } from "../funcs/getUser.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Users } from "./users.js";

export class SDK extends ClientSDK {
  private _users?: Users;
  get users(): Users {
    return (this._users ??= new Users(this._options));
  }

  async createUser(
    request: components.UserInsert,
    options?: RequestOptions,
  ): Promise<components.UserSelect> {
    return unwrapAsync(createUser(
      this,
      request,
      options,
    ));
  }

  async getUser(
    request: operations.GetUserRequest,
    options?: RequestOptions,
  ): Promise<components.UserSelect> {
    return unwrapAsync(getUser(
      this,
      request,
      options,
    ));
  }
}
