/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UserSelect = {
  id: string;
  name: string;
  age: number;
};

/** @internal */
export const UserSelect$inboundSchema: z.ZodType<
  UserSelect,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  age: z.number(),
});

/** @internal */
export type UserSelect$Outbound = {
  id: string;
  name: string;
  age: number;
};

/** @internal */
export const UserSelect$outboundSchema: z.ZodType<
  UserSelect$Outbound,
  z.ZodTypeDef,
  UserSelect
> = z.object({
  id: z.string(),
  name: z.string(),
  age: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserSelect$ {
  /** @deprecated use `UserSelect$inboundSchema` instead. */
  export const inboundSchema = UserSelect$inboundSchema;
  /** @deprecated use `UserSelect$outboundSchema` instead. */
  export const outboundSchema = UserSelect$outboundSchema;
  /** @deprecated use `UserSelect$Outbound` instead. */
  export type Outbound = UserSelect$Outbound;
}
